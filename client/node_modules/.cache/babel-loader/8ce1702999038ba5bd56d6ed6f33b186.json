{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Distance.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { DistanceMatrixService } from \"@react-google-maps/api\";\nimport { Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Distance(props) {\n  _s();\n\n  const {\n    destination,\n    origin\n  } = props;\n  console.log(destination);\n  const options = {\n    destinations: [destination],\n    origins: [origin],\n    travelMode: \"WALKING\"\n  };\n  let time = \"\";\n  let distance = \"\";\n  useEffect(() => {}, [props.destination, props.origin]);\n\n  const callback = response => {\n    console.log(\"response from distance\", response);\n    time = response.rows[0].elements[0].duration.text;\n    console.log(time);\n    distance = response.rows[0].elements[0].distance.text;\n    console.log(distance);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DirectionsService, {\n      options: {\n        destination: this.state.destination,\n        origin: this.state.origin,\n        travelMode: this.state.travelMode\n      },\n      callback: this.directionsCallback,\n      onLoad: directionsService => {// console.log(\n        //   \"DirectionsService onLoad directionsService: \",\n        //   directionsService\n        // );\n      },\n      onUnmount: directionsService => {// console.log(\n        //   \"DirectionsService onUnmount directionsService: \",\n        //   directionsService\n        // );\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Distance, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Distance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Distance\");","map":{"version":3,"sources":["/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Distance.jsx"],"names":["useState","useEffect","DistanceMatrixService","Spinner","Distance","props","destination","origin","console","log","options","destinations","origins","travelMode","time","distance","callback","response","rows","elements","duration","text","state","directionsCallback","directionsService"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AAEA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA0BF,KAAhC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEA,QAAMI,OAAO,GAAG;AACdC,IAAAA,YAAY,EAAE,CAACL,WAAD,CADA;AAEdM,IAAAA,OAAO,EAAE,CAACL,MAAD,CAFK;AAGdM,IAAAA,UAAU,EAAE;AAHE,GAAhB;AAMA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,QAAQ,GAAG,EAAf;AAEAd,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACI,KAAK,CAACC,WAAP,EAAoBD,KAAK,CAACE,MAA1B,CAAX,CAAT;;AAEA,QAAMS,QAAQ,GAAIC,QAAD,IAAc;AAC7BT,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCQ,QAAtC;AACAH,IAAAA,IAAI,GAAGG,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BC,QAA7B,CAAsCC,IAA7C;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACAC,IAAAA,QAAQ,GAAGE,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BJ,QAA7B,CAAsCM,IAAjD;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACD,GAND;;AAQA,sBACE;AAAA,2BACE,QAAC,iBAAD;AACE,MAAA,OAAO,EAAE;AACPT,QAAAA,WAAW,EAAE,KAAKgB,KAAL,CAAWhB,WADjB;AAEPC,QAAAA,MAAM,EAAE,KAAKe,KAAL,CAAWf,MAFZ;AAGPM,QAAAA,UAAU,EAAE,KAAKS,KAAL,CAAWT;AAHhB,OADX;AAME,MAAA,QAAQ,EAAE,KAAKU,kBANjB;AAOE,MAAA,MAAM,EAAGC,iBAAD,IAAuB,CAC7B;AACA;AACA;AACA;AACD,OAZH;AAaE,MAAA,SAAS,EAAGA,iBAAD,IAAuB,CAChC;AACA;AACA;AACA;AACD;AAlBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA/CuBpB,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { DistanceMatrixService } from \"@react-google-maps/api\";\n\nimport { Spinner } from \"react-bootstrap\";\n\nexport default function Distance(props) {\n  const { destination, origin } = props;\n  console.log(destination);\n\n  const options = {\n    destinations: [destination],\n    origins: [origin],\n    travelMode: \"WALKING\",\n  };\n\n  let time = \"\";\n  let distance = \"\";\n\n  useEffect(() => {}, [props.destination, props.origin]);\n\n  const callback = (response) => {\n    console.log(\"response from distance\", response);\n    time = response.rows[0].elements[0].duration.text;\n    console.log(time);\n    distance = response.rows[0].elements[0].distance.text;\n    console.log(distance);\n  };\n\n  return (\n    <div>\n      <DirectionsService\n        options={{\n          destination: this.state.destination,\n          origin: this.state.origin,\n          travelMode: this.state.travelMode,\n        }}\n        callback={this.directionsCallback}\n        onLoad={(directionsService) => {\n          // console.log(\n          //   \"DirectionsService onLoad directionsService: \",\n          //   directionsService\n          // );\n        }}\n        onUnmount={(directionsService) => {\n          // console.log(\n          //   \"DirectionsService onUnmount directionsService: \",\n          //   directionsService\n          // );\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}