{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Map.jsx\";\nimport React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Geocode from \"react-geocode\";\nimport \"./Map.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnyReactComponent = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 41\n  }, this);\n};\n\n_c = AnyReactComponent;\n\nclass Map extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true,\n      center: {\n        lat: 43.7995125,\n        lng: -79.2757926\n      },\n      zoom: 17\n    };\n  }\n\n  // static defaultProps = {\n  //   center: {\n  //     lat: 43.642039,\n  //     lng: -79.412007,\n  //   },\n  //   zoom: 17,\n  // };\n  componentDidMount() {\n    // Get latitude & longitude from address.\n    Geocode.setApiKey(\"AIzaSyDZ4HxogFXeESTTN2JXpPpjCRozf7vEfIk\");\n    Geocode.fromAddress(\"201 Town Centre Blvd, Markham\").then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location;\n      console.log(lat, lng);\n      console.log(this.state.center);\n      console.log(this.state.loading);\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"50vh\",\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          bootstrapURLKeys: {\n            key: \"AIzaSyDZ4HxogFXeESTTN2JXpPpjCRozf7vEfIk\"\n          },\n          defaultCenter: this.state.center,\n          defaultZoom: this.state.zoom,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Map__Marker\",\n            children: /*#__PURE__*/_jsxDEV(AnyReactComponent, {\n              lat: this.state.center.lat,\n              lng: this.state.center.lng,\n              text: \"< Pick Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnyReactComponent\");","map":{"version":3,"sources":["/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Map.jsx"],"names":["React","Component","GoogleMapReact","Geocode","AnyReactComponent","text","Map","state","loading","center","lat","lng","zoom","componentDidMount","setApiKey","fromAddress","then","response","results","geometry","location","console","log","error","render","height","width","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,YAAP;;;AACA,MAAMC,iBAAiB,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAAc;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAd;AAAA,CAA1B;;KAAMD,iB;;AAEN,MAAME,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,UADC;AAENC,QAAAA,GAAG,EAAE,CAAC;AAFA,OAFF;AAMNC,MAAAA,IAAI,EAAE;AANA,KADkB;AAAA;;AAU1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,GAAG;AAClB;AACAV,IAAAA,OAAO,CAACW,SAAR,CAAkB,yCAAlB;AACAX,IAAAA,OAAO,CAACY,WAAR,CAAoB,+BAApB,EAAqDC,IAArD,CACGC,QAAD,IAAc;AACZ,YAAM;AAAEP,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAeM,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAAlD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ,EAAiBC,GAAjB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWE,MAAvB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,OAAvB;AACD,KANH,EAOGe,KAAD,IAAW;AACTF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,KATH;AAWD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKjB,KAAL,CAAWC,OAAhB,EAAyB;AACvB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAK,QAAA,KAAK,EAAE;AAAEiB,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAAZ;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,gBAAgB,EAAE;AAChBC,YAAAA,GAAG,EAAE;AADW,WADpB;AAIE,UAAA,aAAa,EAAE,KAAKpB,KAAL,CAAWE,MAJ5B;AAKE,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWK,IAL1B;AAAA,iCAOE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE,QAAC,iBAAD;AACE,cAAA,GAAG,EAAE,KAAKL,KAAL,CAAWE,MAAX,CAAkBC,GADzB;AAEE,cAAA,GAAG,EAAE,KAAKH,KAAL,CAAWE,MAAX,CAAkBE,GAFzB;AAGE,cAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAmBD;AACF;;AA1DyB;;AA6D5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Geocode from \"react-geocode\";\n\nimport \"./Map.scss\";\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass Map extends Component {\n  state = {\n    loading: true,\n    center: {\n      lat: 43.7995125,\n      lng: -79.2757926,\n    },\n    zoom: 17,\n  };\n\n  // static defaultProps = {\n  //   center: {\n  //     lat: 43.642039,\n  //     lng: -79.412007,\n  //   },\n  //   zoom: 17,\n  // };\n\n  componentDidMount() {\n    // Get latitude & longitude from address.\n    Geocode.setApiKey(\"AIzaSyDZ4HxogFXeESTTN2JXpPpjCRozf7vEfIk\");\n    Geocode.fromAddress(\"201 Town Centre Blvd, Markham\").then(\n      (response) => {\n        const { lat, lng } = response.results[0].geometry.location;\n        console.log(lat, lng);\n        console.log(this.state.center);\n        console.log(this.state.loading);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return <p>loading</p>;\n    } else {\n      return (\n        <div style={{ height: \"50vh\", width: \"100%\" }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: \"AIzaSyDZ4HxogFXeESTTN2JXpPpjCRozf7vEfIk\",\n            }}\n            defaultCenter={this.state.center}\n            defaultZoom={this.state.zoom}\n          >\n            <div className=\"Map__Marker\">\n              <AnyReactComponent\n                lat={this.state.center.lat}\n                lng={this.state.center.lng}\n                text=\"< Pick Up\"\n              />\n            </div>\n          </GoogleMapReact>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}