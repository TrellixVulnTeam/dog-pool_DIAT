{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Map.jsx\";\nimport { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnyReactComponent = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 41\n  }, this);\n};\n\n_c = AnyReactComponent;\n\nclass Map extends Component {\n  componentDidMount() {\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\n      center: {\n        lat: -33.8688,\n        lng: 151.2195\n      },\n      zoom: 13,\n      mapTypeId: \"roadmap\"\n    }); // Create the search box and link it to the UI element.\n\n    const input = document.getElementById(\"pac-input\");\n    const searchBox = new google.maps.places.SearchBox(input);\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input); // Bias the SearchBox results towards current map's viewport.\n\n    map.addListener(\"bounds_changed\", () => {\n      searchBox.setBounds(map.getBounds());\n    });\n    let markers = []; // Listen for the event fired when the user selects a prediction and retrieve\n    // more details for that place.\n\n    searchBox.addListener(\"places_changed\", () => {\n      const places = searchBox.getPlaces();\n\n      if (places.length == 0) {\n        return;\n      } // Clear out the old markers.\n\n\n      markers.forEach(marker => {\n        marker.setMap(null);\n      });\n      markers = []; // For each place, get the icon, name and location.\n\n      const bounds = new google.maps.LatLngBounds();\n      places.forEach(place => {\n        if (!place.geometry || !place.geometry.location) {\n          console.log(\"Returned place contains no geometry\");\n          return;\n        }\n\n        const icon = {\n          url: place.icon,\n          size: new google.maps.Size(71, 71),\n          origin: new google.maps.Point(0, 0),\n          anchor: new google.maps.Point(17, 34),\n          scaledSize: new google.maps.Size(25, 25)\n        }; // Create a marker for each place.\n\n        markers.push(new google.maps.Marker({\n          map,\n          icon,\n          title: place.name,\n          position: place.geometry.location\n        }));\n\n        if (place.geometry.viewport) {\n          // Only geocodes have viewport.\n          bounds.union(place.geometry.viewport);\n        } else {\n          bounds.extend(place.geometry.location);\n        }\n      });\n      map.fitBounds(bounds);\n    });\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // Important! Always set the container height explicitly\n      _jsxDEV(\"div\", {\n        style: {\n          height: \"50vh\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"script\", {\n          async: true,\n          src: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBJJrxGfyjaBsIy6EK3xltZ7JcxXGAsN9k&libraries=places&callback=initMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: \"display: none\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"origin-input\",\n            class: \"controls\",\n            type: \"text\",\n            placeholder: \"Enter an origin location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"destination-input\",\n            class: \"controls\",\n            type: \"text\",\n            placeholder: \"Enter a destination location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"mode-selector\",\n            class: \"controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"type\",\n              id: \"changemode-walking\",\n              checked: \"checked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"changemode-walking\",\n              children: \"Walking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"type\",\n              id: \"changemode-transit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"changemode-transit\",\n              children: \"Transit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"type\",\n              id: \"changemode-driving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"changemode-driving\",\n              children: \"Driving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nMap.defaultProps = {\n  center: {\n    lat: 43.65,\n    lng: -79.38\n  },\n  zoom: 16\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnyReactComponent\");","map":{"version":3,"sources":["/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Map.jsx"],"names":["Component","GoogleMapReact","AnyReactComponent","text","Map","componentDidMount","map","google","maps","document","getElementById","center","lat","lng","zoom","mapTypeId","input","searchBox","places","SearchBox","controls","ControlPosition","TOP_LEFT","push","addListener","setBounds","getBounds","markers","getPlaces","length","forEach","marker","setMap","bounds","LatLngBounds","place","geometry","location","console","log","icon","url","size","Size","origin","Point","anchor","scaledSize","Marker","title","name","position","viewport","union","extend","fitBounds","render","height","width","defaultProps"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass Map extends Component {\n  static defaultProps = {\n    center: {\n      lat: 43.65,\n      lng: -79.38,\n    },\n    zoom: 16,\n  };\n\n  componentDidMount() {\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: -33.8688, lng: 151.2195 },\n      zoom: 13,\n      mapTypeId: \"roadmap\",\n    });\n    // Create the search box and link it to the UI element.\n    const input = document.getElementById(\"pac-input\");\n    const searchBox = new google.maps.places.SearchBox(input);\n\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n    // Bias the SearchBox results towards current map's viewport.\n    map.addListener(\"bounds_changed\", () => {\n      searchBox.setBounds(map.getBounds());\n    });\n\n    let markers = [];\n\n    // Listen for the event fired when the user selects a prediction and retrieve\n    // more details for that place.\n    searchBox.addListener(\"places_changed\", () => {\n      const places = searchBox.getPlaces();\n\n      if (places.length == 0) {\n        return;\n      }\n\n      // Clear out the old markers.\n      markers.forEach((marker) => {\n        marker.setMap(null);\n      });\n      markers = [];\n\n      // For each place, get the icon, name and location.\n      const bounds = new google.maps.LatLngBounds();\n\n      places.forEach((place) => {\n        if (!place.geometry || !place.geometry.location) {\n          console.log(\"Returned place contains no geometry\");\n          return;\n        }\n\n        const icon = {\n          url: place.icon,\n          size: new google.maps.Size(71, 71),\n          origin: new google.maps.Point(0, 0),\n          anchor: new google.maps.Point(17, 34),\n          scaledSize: new google.maps.Size(25, 25),\n        };\n\n        // Create a marker for each place.\n        markers.push(\n          new google.maps.Marker({\n            map,\n            icon,\n            title: place.name,\n            position: place.geometry.location,\n          })\n        );\n        if (place.geometry.viewport) {\n          // Only geocodes have viewport.\n          bounds.union(place.geometry.viewport);\n        } else {\n          bounds.extend(place.geometry.location);\n        }\n      });\n      map.fitBounds(bounds);\n    });\n  }\n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: \"50vh\", width: \"100%\" }}>\n        <script\n          async\n          src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBJJrxGfyjaBsIy6EK3xltZ7JcxXGAsN9k&libraries=places&callback=initMap\"\n        ></script>\n        <div style=\"display: none\">\n          <input\n            id=\"origin-input\"\n            class=\"controls\"\n            type=\"text\"\n            placeholder=\"Enter an origin location\"\n          />\n\n          <input\n            id=\"destination-input\"\n            class=\"controls\"\n            type=\"text\"\n            placeholder=\"Enter a destination location\"\n          />\n\n          <div id=\"mode-selector\" class=\"controls\">\n            <input\n              type=\"radio\"\n              name=\"type\"\n              id=\"changemode-walking\"\n              checked=\"checked\"\n            />\n            <label for=\"changemode-walking\">Walking</label>\n\n            <input type=\"radio\" name=\"type\" id=\"changemode-transit\" />\n            <label for=\"changemode-transit\">Transit</label>\n\n            <input type=\"radio\" name=\"type\" id=\"changemode-driving\" />\n            <label for=\"changemode-driving\">Driving</label>\n          </div>\n        </div>\n\n        <div id=\"map\"></div>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}