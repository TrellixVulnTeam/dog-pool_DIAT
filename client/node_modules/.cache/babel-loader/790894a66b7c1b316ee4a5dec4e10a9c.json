{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Map2.jsx\";\nimport React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Geocode from \"react-geocode\";\nimport \"./Map.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnyReactComponent = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 41\n  }, this);\n};\n\n_c = AnyReactComponent;\n\nclass Map extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true,\n      center: {\n        lat: 43.64563,\n        lng: -79.39545\n      },\n      zoom: 15\n    };\n  }\n\n  // static defaultProps = {\n  //   center: {\n  //     lat: 43.642039,\n  //     lng: -79.412007,\n  //   },\n  //   zoom: 17,\n  // };\n  componentDidMount() {\n    // Get latitude & longitude from address.\n    Geocode.setApiKey(\"AIzaSyDZ4HxogFXeESTTN2JXpPpjCRozf7vEfIk\");\n    Geocode.fromAddress(this.props.address).then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location;\n      console.log(lat, lng);\n      console.log(this.state.center);\n      console.log(this.state.loading);\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Map2;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnyReactComponent\");","map":{"version":3,"sources":["/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Map2.jsx"],"names":["React","Component","GoogleMapReact","Geocode","AnyReactComponent","text","Map","state","loading","center","lat","lng","zoom","componentDidMount","setApiKey","fromAddress","props","address","then","response","results","geometry","location","console","log","error","componentDidUpdate","render","Map2"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,YAAP;;;AACA,MAAMC,iBAAiB,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAAc;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAd;AAAA,CAA1B;;KAAMD,iB;;AAEN,MAAME,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,QADC;AAENC,QAAAA,GAAG,EAAE,CAAC;AAFA,OAFF;AAMNC,MAAAA,IAAI,EAAE;AANA,KADkB;AAAA;;AAS1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,GAAG;AAClB;AACAV,IAAAA,OAAO,CAACW,SAAR,CAAkB,yCAAlB;AACAX,IAAAA,OAAO,CAACY,WAAR,CAAoB,KAAKC,KAAL,CAAWC,OAA/B,EAAwCC,IAAxC,CACGC,QAAD,IAAc;AACZ,YAAM;AAAET,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAeQ,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAAlD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ,EAAiBC,GAAjB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,MAAvB;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,OAAvB;AACD,KANH,EAOGiB,KAAD,IAAW;AACTF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,KATH;AAWD;;AACDC,EAAAA,kBAAkB,GAAG,CAAE;;AAEvBC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AApCyB;;AAuC5B,eAAeC,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Geocode from \"react-geocode\";\n\nimport \"./Map.scss\";\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass Map extends Component {\n  state = {\n    loading: true,\n    center: {\n      lat: 43.64563,\n      lng: -79.39545,\n    },\n    zoom: 15,\n  };\n  // static defaultProps = {\n  //   center: {\n  //     lat: 43.642039,\n  //     lng: -79.412007,\n  //   },\n  //   zoom: 17,\n  // };\n\n  componentDidMount() {\n    // Get latitude & longitude from address.\n    Geocode.setApiKey(\"AIzaSyDZ4HxogFXeESTTN2JXpPpjCRozf7vEfIk\");\n    Geocode.fromAddress(this.props.address).then(\n      (response) => {\n        const { lat, lng } = response.results[0].geometry.location;\n        console.log(lat, lng);\n        console.log(this.state.center);\n        console.log(this.state.loading);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  componentDidUpdate() {}\n\n  render() {\n    return <div></div>;\n  }\n}\n\nexport default Map2;\n"]},"metadata":{},"sourceType":"module"}