{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Map.jsx\";\nimport React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Geocode from \"react-geocode\";\nimport \"./Map.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnyReactComponent = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 41\n  }, this);\n};\n\n_c = AnyReactComponent;\n\nclass Map extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: false,\n      center: {\n        lat: null,\n        lng: null\n      },\n      zoom: 17\n    };\n  }\n\n  // static defaultProps = {\n  //   center: {\n  //     lat: 43.642039,\n  //     lng: -79.412007,\n  //   },\n  //   zoom: 17,\n  // };\n  componentDidMount() {\n    // Get latitude & longitude from address.\n    Geocode.setApiKey(\"AIzaSyDZ4HxogFXeESTTN2JXpPpjCRozf7vEfIk\");\n    Geocode.fromAddress(\"15 mollard road\").then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location;\n      this.setState({\n        center: {\n          lat: lat,\n          lng: lng\n        },\n        loaded: true\n      });\n      console.log(lat, lng);\n      console.log(this.state.center);\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"50vh\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: \"AIzaSyDZ4HxogFXeESTTN2JXpPpjCRozf7vEfIk\"\n        },\n        defaultCenter: this.state.center,\n        defaultZoom: this.state.zoom,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Map__Marker\",\n          children: /*#__PURE__*/_jsxDEV(AnyReactComponent, {\n            lat: this.state.center.lat,\n            lng: this.state.center.lng,\n            text: \"< Pick Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnyReactComponent\");","map":{"version":3,"sources":["/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Map.jsx"],"names":["React","Component","GoogleMapReact","Geocode","AnyReactComponent","text","Map","state","loading","center","lat","lng","zoom","componentDidMount","setApiKey","fromAddress","then","response","results","geometry","location","setState","loaded","console","log","error","render","height","width","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,YAAP;;;AACA,MAAMC,iBAAiB,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAAc;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAd;AAAA,CAA1B;;KAAMD,iB;;AAEN,MAAME,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAE,KADH;AAGNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,IADC;AAENC,QAAAA,GAAG,EAAE;AAFC,OAHF;AAONC,MAAAA,IAAI,EAAE;AAPA,KADkB;AAAA;;AAW1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,GAAG;AAClB;AACAV,IAAAA,OAAO,CAACW,SAAR,CAAkB,yCAAlB;AACAX,IAAAA,OAAO,CAACY,WAAR,CAAoB,iBAApB,EAAuCC,IAAvC,CACGC,QAAD,IAAc;AACZ,YAAM;AAAEP,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAeM,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAAlD;AACA,WAAKC,QAAL,CAAc;AACZZ,QAAAA,MAAM,EAAE;AACNC,UAAAA,GAAG,EAAEA,GADC;AAENC,UAAAA,GAAG,EAAEA;AAFC,SADI;AAKZW,QAAAA,MAAM,EAAE;AALI,OAAd;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ,EAAiBC,GAAjB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,MAAvB;AACD,KAbH,EAcGgB,KAAD,IAAW;AACTF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,KAhBH;AAkBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKnB,KAAL,CAAWC,OAAhB,EAAyB;AACvB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEmB,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAAZ;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,gBAAgB,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP,SADpB;AAEE,QAAA,aAAa,EAAE,KAAKtB,KAAL,CAAWE,MAF5B;AAGE,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWK,IAH1B;AAAA,+BAKE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE,QAAC,iBAAD;AACE,YAAA,GAAG,EAAE,KAAKL,KAAL,CAAWE,MAAX,CAAkBC,GADzB;AAEE,YAAA,GAAG,EAAE,KAAKH,KAAL,CAAWE,MAAX,CAAkBE,GAFzB;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA/DyB;;AAkE5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Geocode from \"react-geocode\";\n\nimport \"./Map.scss\";\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass Map extends Component {\n  state = {\n    loading: false,\n\n    center: {\n      lat: null,\n      lng: null,\n    },\n    zoom: 17,\n  };\n\n  // static defaultProps = {\n  //   center: {\n  //     lat: 43.642039,\n  //     lng: -79.412007,\n  //   },\n  //   zoom: 17,\n  // };\n\n  componentDidMount() {\n    // Get latitude & longitude from address.\n    Geocode.setApiKey(\"AIzaSyDZ4HxogFXeESTTN2JXpPpjCRozf7vEfIk\");\n    Geocode.fromAddress(\"15 mollard road\").then(\n      (response) => {\n        const { lat, lng } = response.results[0].geometry.location;\n        this.setState({\n          center: {\n            lat: lat,\n            lng: lng,\n          },\n          loaded: true,\n        });\n\n        console.log(lat, lng);\n        console.log(this.state.center);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return <p>loading</p>;\n    }\n    return (\n      <div style={{ height: \"50vh\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyDZ4HxogFXeESTTN2JXpPpjCRozf7vEfIk\" }}\n          defaultCenter={this.state.center}\n          defaultZoom={this.state.zoom}\n        >\n          <div className=\"Map__Marker\">\n            <AnyReactComponent\n              lat={this.state.center.lat}\n              lng={this.state.center.lng}\n              text=\"< Pick Up\"\n            />\n          </div>\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}