{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Map2.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Geocode from \"react-geocode\";\nimport { Spinner } from \"react-bootstrap\";\nimport { GoogleMap, useLoadScript, DistanceMatrixService, Marker, DirectionsRenderer, DirectionsService } from \"@react-google-maps/api\";\nimport MapDirectionsRenderer from \"./Directions\";\nimport Distance from \"./Distance\";\nimport Locate from \"./Locate\";\nimport LocateHome from \"./LocateHome\";\nimport SearchStart from \"./SearchStart\";\nimport SearchDestination from \"./SearchDestination\";\nimport \"../styles/map.css\";\nimport mapStyles from \"../styles/mapStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"65vh\",\n  width: \"850px\"\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst center = {\n  lat: 43.6532,\n  lng: -79.3832\n}; //temporary data for directions\n\nGeocode.setApiKey(\"\");\nexport default function Map(props) {\n  _s();\n\n  const {\n    travelTD,\n    settravelTD,\n    origin,\n    setOrigin,\n    destination,\n    setDestination,\n    startAddress,\n    setstartAddress,\n    finishAddress,\n    setfinishAddress\n  } = props;\n  const [markers, setMarkers] = React.useState([]);\n  const [loadedOnce, setloadedOnce] = React.useState(false); // Directions State\n\n  const [response, setResponse] = React.useState(null);\n  const [travelMode, setTravelMode] = React.useState(\"WALKING\");\n  const places = [{\n    latitude: origin.lat,\n    longitude: origin.lng\n  }, {\n    latitude: destination.lat,\n    longitude: destination.lng\n  }];\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"\",\n    libraries\n  });\n  const onMapClick = React.useCallback(e => {\n    setMarkers(() => [{\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng(),\n      time: new Date()\n    }]);\n  }, []);\n  const setMarker = React.useCallback((lat, lng) => {\n    setMarkers(() => [{\n      lat: lat,\n      lng: lng,\n      time: new Date()\n    }]);\n  }, []);\n\n  const getAddress = (lat, lng) => {\n    Geocode.fromLatLng(lat, lng).then(response => {\n      const address = response.results[0].formatted_address;\n      console.log(address);\n      setstartAddress(address);\n      console.log(startAddress);\n    }, error => {\n      console.error(error);\n    });\n  };\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(_ref => {\n    let {\n      lat,\n      lng\n    } = _ref;\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n    setMarkers(() => [{\n      lat: lat,\n      lng: lng,\n      time: new Date()\n    }]);\n    getAddress(lat, lng);\n  }, []);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    variant: \"secondary\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"onlySearch\",\n        children: [/*#__PURE__*/_jsxDEV(Locate, {\n          panTo: panTo,\n          setOrigin: setOrigin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchStart, {\n          panTo: panTo,\n          startAddress: startAddress,\n          setOrigin: setOrigin,\n          loadedOnce: loadedOnce,\n          setloadedOnce: setloadedOnce\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"onlyDestination\",\n        children: /*#__PURE__*/_jsxDEV(SearchDestination, {\n          panTo: panTo,\n          finishAddress: finishAddress,\n          destination: destination,\n          setDestination: setDestination,\n          loadedOnce: loadedOnce,\n          setloadedOnce: setloadedOnce\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      id: \"map\",\n      mapContainerStyle: mapContainerStyle,\n      zoom: 8,\n      center: center,\n      options: options,\n      onClick: onMapClick,\n      onLoad: onMapLoad,\n      children: [markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        }\n      }, `${marker.lat}-${marker.lng}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(MapDirectionsRenderer, {\n        places: places,\n        travelMode: \"DRIVING\",\n        loadedOnce: loadedOnce,\n        setloadedOnce: setloadedOnce\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), destination && origin && /*#__PURE__*/_jsxDEV(Distance, {\n        setfinishAddress: setfinishAddress,\n        setstartAddress: setstartAddress,\n        travelMode: \"DRIVING\",\n        loadedOnce: loadedOnce,\n        setloadedOnce: setloadedOnce,\n        destination: destination,\n        origin: origin,\n        settravelTD: (time, distance) => {\n          settravelTD({ ...travelTD,\n            time,\n            distance\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"U1uTP62CaecZjAwZ76RCnJRnYYk=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/Map2.js"],"names":["React","Geocode","Spinner","GoogleMap","useLoadScript","DistanceMatrixService","Marker","DirectionsRenderer","DirectionsService","MapDirectionsRenderer","Distance","Locate","LocateHome","SearchStart","SearchDestination","mapStyles","libraries","mapContainerStyle","height","width","options","styles","disableDefaultUI","zoomControl","center","lat","lng","setApiKey","Map","props","travelTD","settravelTD","origin","setOrigin","destination","setDestination","startAddress","setstartAddress","finishAddress","setfinishAddress","markers","setMarkers","useState","loadedOnce","setloadedOnce","response","setResponse","travelMode","setTravelMode","places","latitude","longitude","isLoaded","loadError","googleMapsApiKey","onMapClick","useCallback","e","latLng","time","Date","setMarker","getAddress","fromLatLng","then","address","results","formatted_address","console","log","error","mapRef","useRef","onMapLoad","map","current","panTo","setZoom","marker","distance"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Geocode from \"react-geocode\";\nimport { Spinner } from \"react-bootstrap\";\n\nimport {\n  GoogleMap,\n  useLoadScript,\n  DistanceMatrixService,\n  Marker,\n  DirectionsRenderer,\n  DirectionsService,\n} from \"@react-google-maps/api\";\n\nimport MapDirectionsRenderer from \"./Directions\";\nimport Distance from \"./Distance\";\nimport Locate from \"./Locate\";\nimport LocateHome from \"./LocateHome\";\nimport SearchStart from \"./SearchStart\";\nimport SearchDestination from \"./SearchDestination\";\n\nimport \"../styles/map.css\";\nimport mapStyles from \"../styles/mapStyles\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"65vh\",\n  width: \"850px\",\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\nconst center = {\n  lat: 43.6532,\n  lng: -79.3832,\n};\n//temporary data for directions\n\nGeocode.setApiKey(\"\");\n\nexport default function Map(props) {\n  const {\n    travelTD,\n    settravelTD,\n    origin,\n    setOrigin,\n    destination,\n    setDestination,\n    startAddress,\n    setstartAddress,\n    finishAddress,\n    setfinishAddress,\n  } = props;\n\n  const [markers, setMarkers] = React.useState([]);\n\n  const [loadedOnce, setloadedOnce] = React.useState(false);\n\n  // Directions State\n  const [response, setResponse] = React.useState(null);\n  const [travelMode, setTravelMode] = React.useState(\"WALKING\");\n\n  const places = [\n    { latitude: origin.lat, longitude: origin.lng },\n    { latitude: destination.lat, longitude: destination.lng },\n  ];\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"\",\n    libraries,\n  });\n\n  const onMapClick = React.useCallback((e) => {\n    setMarkers(() => [\n      {\n        lat: e.latLng.lat(),\n        lng: e.latLng.lng(),\n        time: new Date(),\n      },\n    ]);\n  }, []);\n\n  const setMarker = React.useCallback((lat, lng) => {\n    setMarkers(() => [\n      {\n        lat: lat,\n        lng: lng,\n        time: new Date(),\n      },\n    ]);\n  }, []);\n\n  const getAddress = (lat, lng) => {\n    Geocode.fromLatLng(lat, lng).then(\n      (response) => {\n        const address = response.results[0].formatted_address;\n        console.log(address);\n        setstartAddress(address);\n        console.log(startAddress);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n\n  const mapRef = React.useRef();\n\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const panTo = React.useCallback(({ lat, lng }) => {\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(14);\n    setMarkers(() => [\n      {\n        lat: lat,\n        lng: lng,\n        time: new Date(),\n      },\n    ]);\n    getAddress(lat, lng);\n  }, []);\n\n  if (!isLoaded) return <Spinner animation=\"border\" variant=\"secondary\" />;\n\n  return (\n    <div>\n      <div className=\"searchArea\">\n        <div className=\"onlySearch\">\n          <Locate panTo={panTo} setOrigin={setOrigin} />\n          <SearchStart\n            panTo={panTo}\n            startAddress={startAddress}\n            setOrigin={setOrigin}\n            loadedOnce={loadedOnce}\n            setloadedOnce={setloadedOnce}\n          />\n        </div>\n        {/* <LocateHome panTo={panTo} setDestination = {setDestination}/> */}\n        <div className=\"onlyDestination\">\n          <SearchDestination\n            panTo={panTo}\n            finishAddress={finishAddress}\n            destination={destination}\n            setDestination={setDestination}\n            loadedOnce={loadedOnce}\n            setloadedOnce={setloadedOnce}\n          />\n        </div>\n      </div>\n\n      <GoogleMap\n        id=\"map\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={8}\n        center={center}\n        options={options}\n        onClick={onMapClick}\n        onLoad={onMapLoad}\n      >\n        {markers.map((marker) => (\n          <Marker\n            key={`${marker.lat}-${marker.lng}`}\n            position={{ lat: marker.lat, lng: marker.lng }}\n          />\n        ))}\n        <MapDirectionsRenderer\n          places={places}\n          travelMode=\"DRIVING\"\n          loadedOnce={loadedOnce}\n          setloadedOnce={setloadedOnce}\n        />\n        {destination && origin && (\n          <Distance\n            setfinishAddress={setfinishAddress}\n            setstartAddress={setstartAddress}\n            travelMode=\"DRIVING\"\n            loadedOnce={loadedOnce}\n            setloadedOnce={setloadedOnce}\n            destination={destination}\n            origin={origin}\n            settravelTD={(time, distance) => {\n              settravelTD({\n                ...travelTD,\n                time,\n                distance,\n              });\n            }}\n          />\n        )}\n      </GoogleMap>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}