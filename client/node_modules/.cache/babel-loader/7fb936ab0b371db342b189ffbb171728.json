{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/SearchStart.jsx\",\n    _s = $RefreshSig$();\n\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchStart(props) {\n  _s();\n\n  const {\n    panTo,\n    setOrigin,\n    startAddress\n  } = props;\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 43.6532,\n        lng: () => -79.3832\n      },\n      radius: 100 * 1000\n    }\n  });\n\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n\n  const handleCompass = () => {\n    setValue();\n  };\n\n  const handleSelect = async address => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({\n        address\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      panTo({\n        lat,\n        lng\n      });\n      setOrigin({\n        lat: lat,\n        lng: lng\n      });\n    } catch (error) {\n      console.log(\"Error: \", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: /*#__PURE__*/_jsxDEV(Combobox, {\n      onSelect: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(ComboboxInput, {\n        value: value,\n        onChange: handleInput,\n        placeholder: startAddress ? startAddress : \"Search your location\",\n        className: \"searchBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ComboboxPopover, {\n        className: \"comboboxPop\",\n        children: /*#__PURE__*/_jsxDEV(ComboboxList, {\n          className: \"comboboxList\",\n          children: status === \"OK\" && data.map(_ref => {\n            let {\n              id,\n              description\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ComboboxOption, {\n              value: description,\n              className: \"comboboxOption\"\n            }, description, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchStart, \"D6hJ+w6b1RCkdTlt9AbdYG9Ebfw=\", false, function () {\n  return [usePlacesAutocomplete];\n});\n\n_c = SearchStart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchStart\");","map":{"version":3,"sources":["/Users/j/Desktop/Capstone/dog-pool/client/src/components/Map/SearchStart.jsx"],"names":["usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","SearchStart","props","panTo","setOrigin","startAddress","ready","value","suggestions","status","data","setValue","clearSuggestions","requestOptions","location","lat","lng","radius","handleInput","e","target","handleCompass","handleSelect","address","results","error","console","log","map","id","description"],"mappings":";;;AAAA,OAAOA,qBAAP,IACEC,UADF,EAEEC,SAFF,QAGO,yBAHP;AAKA,SACEC,QADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,cALF,QAMO,iBANP;AAQA,OAAO,4BAAP;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAqCH,KAA3C;AACA,QAAM;AACJI,IAAAA,KADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAHT;AAIJC,IAAAA,QAJI;AAKJC,IAAAA;AALI,MAMFnB,qBAAqB,CAAC;AACxBoB,IAAAA,cAAc,EAAE;AACdC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAE,MAAM,OAAb;AAAsBC,QAAAA,GAAG,EAAE,MAAM,CAAC;AAAlC,OADI;AAEdC,MAAAA,MAAM,EAAE,MAAM;AAFA;AADQ,GAAD,CANzB;;AAaA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBR,IAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASb,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMc,aAAa,GAAG,MAAM;AAC1BV,IAAAA,QAAQ;AACT,GAFD;;AAIA,QAAMW,YAAY,GAAG,MAAOC,OAAP,IAAmB;AACtCZ,IAAAA,QAAQ,CAACY,OAAD,EAAU,KAAV,CAAR;AACAX,IAAAA,gBAAgB;;AAEhB,QAAI;AACF,YAAMY,OAAO,GAAG,MAAM9B,UAAU,CAAC;AAAE6B,QAAAA;AAAF,OAAD,CAAhC;AACA,YAAM;AAAER,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAe,MAAMrB,SAAS,CAAC6B,OAAO,CAAC,CAAD,CAAR,CAApC;AACArB,MAAAA,KAAK,CAAC;AAAEY,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAD,CAAL;AACAZ,MAAAA,SAAS,CAAC;AAAEW,QAAAA,GAAG,EAAEA,GAAP;AAAYC,QAAAA,GAAG,EAAEA;AAAjB,OAAD,CAAT;AACD,KALD,CAKE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACD;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEH,YAApB;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,KAAK,EAAEf,KADT;AAEE,QAAA,QAAQ,EAAEW,WAFZ;AAGE,QAAA,WAAW,EAAEb,YAAY,GAAGA,YAAH,GAAkB,sBAH7C;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,aAA3B;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,cAAxB;AAAA,oBACGI,MAAM,KAAK,IAAX,IACCC,IAAI,CAACkB,GAAL,CAAS;AAAA,gBAAC;AAAEC,cAAAA,EAAF;AAAMC,cAAAA;AAAN,aAAD;AAAA,gCACP,QAAC,cAAD;AAEE,cAAA,KAAK,EAAEA,WAFT;AAGE,cAAA,SAAS,EAAC;AAHZ,eACOA,WADP;AAAA;AAAA;AAAA;AAAA,oBADO;AAAA,WAAT;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA7DuB7B,W;UAQlBR,qB;;;KARkBQ,W","sourcesContent":["import usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\n\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\n\nimport \"@reach/combobox/styles.css\";\n\nexport default function SearchStart(props) {\n  const { panTo, setOrigin, startAddress } = props;\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\n      radius: 100 * 1000,\n    },\n  });\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleCompass = () => {\n    setValue();\n  };\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n      panTo({ lat, lng });\n      setOrigin({ lat: lat, lng: lng });\n    } catch (error) {\n      console.log(\"Error: \", error);\n    }\n  };\n\n  return (\n    <div className=\"search\">\n      <Combobox onSelect={handleSelect}>\n        <ComboboxInput\n          value={value}\n          onChange={handleInput}\n          placeholder={startAddress ? startAddress : \"Search your location\"}\n          className=\"searchBar\"\n        />\n        <ComboboxPopover className=\"comboboxPop\">\n          <ComboboxList className=\"comboboxList\">\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption\n                  key={description}\n                  value={description}\n                  className=\"comboboxOption\"\n                />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}